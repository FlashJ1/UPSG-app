<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAACAgAAABAAgAqAgAAJ4FAAAwMAAAAQAIAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAABAAQAAAAAAAAAAAAAAAAAAAAAAAP///wBlZGAALSwnACgoKQApKSkAGBgZAAsN
        EgALDRMAGRobACgoKABlZWAAAAAAAJiangD//+gA///fAHp+fwBkZWAAV046APTpyQDZslwARS0EAH9c
        FgD/8W4AsrGpAC4sKAB/f3sA//O9AIhtLgBOOBIA//+hAB8iKAApKSoA///2AMaVPwDQmzEAoKKlACoq
        KgA5PD8A/9+NADkoBgB7Vg8A3dfCALKwogDmozEAAAEAABEOBgA7Lg8A3dGxAOnarQCKZCAADAoEAE0z
        AgDo27cA//CjAGpLFQABAQAAjGUeAMPBswD//KwAZUcTAP/RbgBfYGIA//65AIBdIQAnGAAA///KAAkH
        AwDNwKQA1qg9AA8MBgD/1loAoKasAE9UXgD//HYAOisRAEg3DwAiFwMA8a80APTz5wAZEwUAZWVhANzU
        vgD/2loAd2VFANGVMAD/1F8A///hAD06NABkZGAArqmdAP//yAC0uL0AEgwAAGZlYQAWFxkACg0UAAsN
        EQAUFRYAJCQmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALC10CA15fYGFiJAQCCgsLCwsLCwtZ
        Wg5bXAsLCwsLC1ALCwtRUlNUVVZXCwsLC1gYCwtISUpLC0xNTk8LCwsYBAsLQ0RFCwsLC0ZHCwsLHyQL
        Cz4/CwsLCwtAQUILCyQkCws6Ows3CwsLCzw9CwskJAsLNTYLNwsLCws4OQsLJCQLCzAxCwsLCwsyMzQL
        CyQkCwsqKwssCwsLLS4vCwskJAsLJSYnCwsLCwsoKQsLJB8LCwsgIQsLCwsLIiMLCx8YCwsLGRobCwsL
        HB0eCwsYEAsLCwsREhMUFRYXCwsLEAsLCwsLCwsMDQ4PCwsLCwsLCwECAwQEBQYHCAkCCgsLwAMAAIAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAwAMAACgA
        AAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEAAAEBAAABAQAAAQEAAAIBAAACAgAAAgIBAAMDAQAEAwEABAMBAAUEAgAGBQIABwUCAAkH
        AgALCAMADAkDAA0KBAANCwQADgsFAA8MBQAPDAUAEQ0FABINBQATDgUAFA8FABUPBgAWEAYAFxEHABgT
        CAAZFAoAGRUNABoXEQAbGRQAHBoVAB4bFQAhHRQAJB8SACchEQAoIRIAKSIRACokFAAsJRYALSYWADAn
        FAAzKhUANisSADksEgA7LhMAPjEWAEM0FQBGNxUASjsWAE08FwBOPhkATj8dAE5AIgBNQSkAS0ItAEhB
        MwBHQjcAR0I5AEhEOwBIRD0ASEU/AElGQABJR0IASkdEAElIRgBJSEgASUlJAElJSQBJSUoASUpKAEpK
        SgBKSkoASkpKAEpKSgBLS0sAS0tLAEtLSwBLS0sATU1LAFBPSwBTUEgAVlFFAFpSQQBfUzkAZlUwAG1X
        KQByWygAdV0oAHZfKwB0XzAAcWA4AG9hQQBrYkwAamRVAGllWQBtaWAAcG1mAHNybQB1dXIAd3d1AHt7
        eQB/f3wAgYF/AISDgQCGhoQAhoaFAIiIhwCKiokAi4yKAIyNjACOj44Ak5OSAJaXlQCam5kAn5+dAKKj
        oQClpaMApqekAKiopQCqqaUAq6mkAKuooQCrppsAq6GOAKiWdACmjV4ApIVLAKN/PACjejAApHgrAKN3
        KQCfdSYAnXQkAKB1JQCneSYAqnwnAK1+KACygioAt4UtALqJMAC8ijIAvYs0AL6MNADBjTMAw44zAMSQ
        NQDFkjkAxpQ7AMiWPADMmD4A0JtBANOdQwDYokYA3qhIAOatSQDrsksA77ZNAPK5TQDzuk0A9L1OAPbA
        TQD4xE0A+cVOAPnGTwD5x1AA+MlRAPjJUgD4yVQA98lVAPfJVgD2x1gA9chaAPbJXAD2y14A9sxgAPbO
        YgD40WYA+dNqAPrVbgD71nEA+td0APnXeAD52HwA+NiAAPfWggD21IQA9dSFAPbVhwD21IkA9dOLAPXT
        jQD00o8A9NKSAPTSlgD21ZkA99qdAPrenwD84qEA/OSkAPzlqAD75KsA9+KsAPLerwDo2LMA4NO4ANrQ
        ugDUzb4A0MvAANDNwwDQzccA0tDLANPSzgDU088A1dTPANbV0ADY1tEA2djRANzZ0ADf29AA4t3QAObg
        zgDr5M0A7+bLAPLoygD06soA9ezKAPftygD47ssA+O/OAPnw0QD68tUA+vTbAPv24QD7+OgA+/ntAPv5
        8QD8+/UA/Pz5AP39+wD9/f0A/v7+AP7+/gD+/v4A/v7+AP///wD+/v4AAAAAAOF6aFhRVlZWUU5LTlFR
        VlZWVlZRWGh63wAAAAAAAAB2Jw0DAwMDAwMDAwMDAwMDAwMDAwMDAw0odgAAAAAARgMDAwMDAwMxcefy
        5ttxRyMDAwMDAwMDAwMDRgAAAHYDAwMDAwMDKdvSv8HP0fPaaDcDAwMDAwMDAwMDdgDgKAMDAwMDA0Lj
        u6+GaoigtdDnelwWAwMDAwMDAwMo3noNAwMDAwMD2b+yh1+SnZmfpMHuc0IDAwMDAwMDAw16aAMDAwMD
        A23Pr4k1jjogIjuMoqvneDcDAwMDAwMDA2hYAwMDAwMo2a26MzwrEgMDAwNhpM7ZaCADAwMDAwMDWFED
        AwMDA1nUr4kkNQMDAwMDAwM4pdCARwMDAwMDAwNWVgMDAwMDesevXy4bAwMJCQMJAwOOp+dtDwMDAwMD
        A1ZWAwMDAwPcuqUuJAkDCQMDAwMDAyGPztkxAwMDAwMDVlYDAwMDA+W0oyQOCQMDAwMDAwMDAzym6FsP
        AwMDAwNWVgMDAwMM6KifHBIJCQMDAwMDAwMDH5XSfBsDAwMDA1ZWAwMDAwPvppocCQMJAwMDAwMDAwMD
        jsWBMQMDAwMDVlYDAwMDA9emmyMNAwkDAwMDAwMDAwM8o+hWAwMDAwNWVgMDAwMD17abJAMDCQMDAwMD
        AwMDAyyX6WgDAwMDA1ZWAwMDAwOCvJ82AwwDAwMDAwMDAwMUH47ScAMDAwMDVlYDAwMDA27Smz0DDAMD
        AwMDAwMDAzYVjs9yAwMDAwNWVgMDAwMDZ+6hjAMJCQMDAwMDAwMDNBxixm8DAwMDA1ZWAwMDAwMz5aSV
        HgMJAwMDAwMDAwMkLmLtbQMDAwMDVlYDAwMDAxOCzJpfAwMDAwMDAwMDAxs6jtJuAwMDAwNWVgMDAwMD
        A2jwoo4hAwMDAwMDAwMDGTyQ8WsDAwMDA1ZWAwMDAwMDKPLQmF8DAwMDAwMDAwMkYqD1RQMDAwMDVlYD
        AwMDAwMD2dXLiikDAwMDAwMDAzKOtOImAwMDAwNWWAMDAwMDAwNO6cfKYiQMCwMDAwMMYaLPdwMDAwMD
        A1hoAwMDAwMDAxKBhdXDYQMDAwMJAy6irO9CAwMDAwMDaHoNAwMDAwMDAwPZPOnSkjUUFCI4p6jSeQMD
        AwMDAw163igDAwMDAwMDAy0xL/DttZiJnaqq0dkqAwMDAwMDKN4AdQMDAwMDAwMDAwMDFtr/0cHAz+9/
        GwMDAwMDAwN1AAAARgMDAwMDAwMDAwMDG1rh9fXZWgwDAwMDAwMDRgAAAAAAdicNAwMDAwMDAwMDAwMD
        AwMDAwMDAwMNKHYAAAAAAAAA4XloWFFRUVFRUVFRUU5NUVFRUVFYaHrfAAAAAPAAAA/gAAAHwAAAA4AA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABwAAAA+AAAAfwAAAPKAAAADAA
        AABgAAAAAQAIAAAAAACACgAAAAAAAAAAAAAAAQAAAAAAAAAAAAD///8AZGRkAAEBAQBzcXAAUTEXADMf
        DwBILRcAb2ZfAAIBAABpRSAASzoqAG9rZwBJR0UATEtKABQLAQA5JhIA5LqNAPrSpQAiFQUA0os3ALZ6
        MQBJMxkALB8QAHBSMAB/enQA8aRBAPnXrABhVUUAXkEYANaXOgDinj8AlmwwALKCPADFmloA5LNvAPbO
        lQBUSTkA+tqtAPrfugC2pYwAGRcUAOmlOgDFizMA6adAAOepRQC5hjgA7K9KAN+mSgDxw3gA88mGAOrE
        iQD41Z4A9dWiAPvmxADvrz4Au4oyALeFMQCWbygAjGgmAKd6LgD0tEUA8LFEAMiUOQC4ijgA0Z1EAOm3
        WwAcFgwALCMTAPLAbACCaT4AJyEWACwmHAD005wA9duvALSFLACxhDAA9LhJAPS8UACMbS8A8r1ZANeq
        UQAWEgoA9ct5ABMQCgByY0UA+9qZAPXZowD74rEAOTUtAPDfvwASEQ8Ak42BAFxZUwDq5NgALy4sAJ14
        KQCXdCcA8rxDAHxgIgB1WiAAX0kaAEg3FACngC8AUD8ZACkgDQDzxF8AyK5zAPvZkwD01pMA9dicAPre
        oQDZwo8A9uG1APjkugBCPjUA+O3VAOTcygDr49EACQcCAIhrIwAbFQcAhGkmACIbCgCwjDgA9cRRAPbZ
        lQDs16IA9uW+AKWbgwDm2rwA8ebMAFVSSwCopJoAeHZxAA0KAgCGaiIAU0MVAGpUGwCOcSUASjsUACwj
        DABFOBMAQTQSAPbITAA9MhMA9c5fAEs/HgD12IcA+evDAO7kyACyrqMA1tLHAN/c1AAEAwAAX04XADYs
        DwAGBQIA9cxUAPbWdwAyLyYA+u/PAMbArQDPybcAjYuFAB8aCABXSRsA9dRbAA8NBgClmGkA++y7AOzo
        2gD69ugAt7SqAMPBugDq6OEABQQAANG6VwD12GsA9+KNAA0MCAD46KQAPDoyAOTg0QDy7+MA5OLaAAoJ
        BADbx24A/O+wAO3lvgB+emgArauiALu6tQATEQUAFBMNAPn01wAbGAUACgkCALClXwB6dVYAHBsUACMi
        GwDy7MQAKyojAEpJQgAYFw8AUE9HAPv3zwAGBgAAAgIAAAEBAAAODgIABwcBAAMDAQAGBgMABAQCAAMD
        AgAGBgUACAgHAAkJCAAxMSwARkY/AIeHfgCRkYoAysrFAMfHwgB+fn0Aenp5ANLS0QCioqEAj4+OAIeH
        hgD8/fAAAQIAAJ+gngAxMjIA/f39APr6+gD4+PgAy8vLAKWlpQCbm5sAk5OTAIODgwB6enoAbGxsAEdH
        RwBDQ0MANzc3ACsrKwApKSkAGhoaABQUFAAQEBAABQUFAP///wAAAAAAAAAA5OXz9QICAgICAgICAgIC
        AgICAgICAgICAgICAgIC9fPl5AAAAAAAAAAAAAAAAO/09vr82QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAA2fz69vTvAAAAAAAAAAAA8ff7AAAAAAAAAAAAAADRmlLJQ0OHmpoAAAAAAAAAAAAAAAAAAPv38QAA
        AAAAAADn+AAAAAAAAAAAAABb3AK/5OTAwOcMJUiHmgMAAAAAAAAAAAAAAAAA+OcAAAAAAPH4AAAAAAAA
        AAAAAFuEv7ihtbWqobiZ5oYcF9DRAAAAAAAAAAAAAAAAAPjxAAAA7/cAAAAAAAAAAAAAVAKYlZ+nsp+f
        lJSVrK7iBAsP1QAAAAAAAAAAAAAAAAD37wAA9PsAAAAAAAAAAAADhph+nqe7qb6+qWu7s8+r5uMcEwkA
        AAAAAAAAAAAAAAD79ADk9gAAAAAAAAAAAABdo22Qp8bHRiE/Px4wUJK1dOXiHBOaAAAAAAAAAAAAAAAA
        9uTw+gAAAAAAAAAAAMutfn2nxlUKYWBnZ2c5Kx9Os8rw4yUPAAAAAAAAAAAAAAAA+vDz/AAAAAAAAAAA
        /N5aapCxGAd4iIkQBgUKFRQfL5+95oYLdwAAAAAAAAAAAAAA/eIE2gAAAAAAAAAAtq6UYqdGEJuKaUOH
        6ema1B0rHz5vlucIRAkAAAAAAAAAAAAA/vUCAAAAAAAAAADapFpQkLEWjYpDqNEAAAAAAAB7PBpQWKLi
        JQ8AAAAAAAAAAAAAAAICAAAAAAAAAADNl25ip08Tm2mo0gAAAAAAAAAAeWEsU3LqBEgAAAAAAAAAAAAA
        AAICAAAAAAAAAADdozFinmh5jqjVAAADAwMDAwMAAI1gL2yW5yWHAAAAAAAAAAAAAAICAAAAAAAAAACG
        llCQMGmRUtYAAAMDAwMAAwMDAwCJTD1YrQxH0gAAAAAAAAAAAAICAAAAAAAAAKjlWj6QfA+cutcAAAMA
        AAAAAAADAwOHYz9Tg+dzh9IAAAAAAAAAAAICAAAAAAAAAMK/cTeQTwmodwAAAwMAAAAAAAAAAwMAkWAv
        cb9dzdEAAAAAAAAAAAICAAAAAAAAAMiuSTdNYwDWnQAAAwAAAAAAAAAAAAMDnWQrboKkSNEAAAAAAAAA
        AAICAAAAAAAAAMngMjc9igC61gADAAAAAAAAAAAAAAADA45gRYDAWbAAAAAAAAAAAAICAAAAAAAAAMiY
        MjcsZQDW1wADAAAAAAAAAAAAAAAAA3l4QViuXajSAAAAAAAAAAICAAAAAAAAACmYMiofigCd2AADAAAA
        AAAAAAAAAAAAAwCKOUmjGc3SAAAAAAAAAAICAAAAAAAACcitMiofZADW1wADAAAAAAAAAAAAAAAAAwCP
        YDNa6skJAAAAAAAAAAICAAAAAAAA0s2XNSwfYwCd1wADAAAAAAAAAAAAAAAAAwOliFFxwEjRAAAAAAAA
        AAICAAAAAAAA0luFVyweOgDR1QADAAAAAAAAAAAAAAAAAAPXYz9J4VmaAAAAAAAAAAICAAAAAAAA0sLm
        Si0eTNQA1QMAAAAAAAAAAAAAAAAAAAMAijhJdcx3AAAAAAAAAAICAAAAAAAA0qhdWkIeOXsA1dEAAwAA
        AAAAAAAAAAAAmpwDiUsxdYS6AAAAAAAAAAICAAAAAAAA0tRzdSQeOWYA1dEAAAAAAAAAAAAAAAAAA2j+
        jkxFXs53AAAAAAAAAAICAAAAAAAAAJqgmBswOWQAA9HSAAAAAAAAAAAAAAAAAIy0nEwvdszFAAAAAAAA
        AAICAAAAAAAAANHJhScjOGCoANHSAAAAAAAAAAAAAAAAAJxpnEsxdt26AAAAAAAAAAICAAAAAAAAAAnN
        DHQyK2dmAADSAAAAAAAAAAAAAAAAAI2RjTgyuLawAAAAAAAAAAICAAAAAAAAANKHc3YbHkx6nQAD0gAA
        AAAAAAAAAAAAAHtonCsxXt2aAAAAAAAAAAICAAAAAAAAAACaSK02QjlnjQAAAwAAAAAAAAAAAAAAAENl
        jj8kmXMJAAAAAAAAAAICAAAAAAAAAADRVBl0NEFnY3cAAwMAAAAAAwMAAAAAAHubZR8nudwAAAAAAAAA
        AAICAAAAAAAAAADSd11eJjJAYJzRAAMDAwMDAAAAAAAAAESKOyx0rskAAAAAAAAAAAICAAAAAAAAAAAA
        0fzAcTURZ3rB0QAAAwAAAAAAAAAAA5GKOEWs37oAAAAAAAAAAAICAAAAAAAAAAAAAAD0dXAma2GmtNXS
        AAAAAAAAAAAAsJs7KlOvXQMAAAAAAAAAAAICAAAAAAAAAAAAAAD54X9wEiKLnMGw0dLSAAAAAACawYsu
        PVfhtgMAAAAAAAAAAAL1/gAAAAAAAAAAAAD+5bepfxIiiKWoxZoJAAAA6dDTjj83anTf2wAAAAAAAAAA
        /vXi/QAAAAAAAAAAAAAA/K6CVYAbInjExdSampqwxdN7Lk1ObeHO2AAAAAAAAAAA/eLw+gAAAAAAAAAA
        AAAAAOuua5OhWCM8nNPTh9PBeQYhTk1Tdt79AAAAAAAAAAAA+vDk9gAAAAAAAAAAAAAAAAANKJEloaoy
        MCAWBhAHGFFqTkV0hfkDAAAAAAAAAAAA9uQA9PsAAAAAAAAAAAAAAACwUikAHMPPvJJqQlFCkpBOU6HA
        DdoAAAAAAAAAAAD79AAA7/cAAAAAAAAAAAAAAAAAmprSA4R16MOzspKSklN+rMAO2QAAAAAAAAAAAAD3
        7wAAAPL4AAAAAAAAAAAAAAAAANKa0tv5gbisw6GVdKy5vv7RAwAAAAAAAAAAAPjyAAAAAADn+AAAAAAA
        AAAAAAAAAAAAANKdtF9co7eZrr5fyQAAAAAAAAAAAAAA+OcAAAAAAAAA8ff7AAAAAAAAAAAAAAAAAADS
        nQnXtFJb2QAAAAAAAAAAAAAAAPv38QAAAAAAAAAAAO/09vr82gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAA2vz69vTvAAAAAAAAAAAAAAAA5OXzBAICAgICAgICAgICAgICAgICAgICAgICAgICBPPl5AAAAAAA
        AAD+AAAAAH8AAPgAAAAAHwAA8AAAAAAPAADgAAAAAAcAAMAAAAAAAwAAgAAAAAABAACAAAAAAAEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAABAACAAAAAAAEAAMAAAAAAAwAA4AAAAAAH
        AADwAAAAAA8AAPgAAAAAHwAA/gAAAAB/AAA=
</value>
  </data>
</root>